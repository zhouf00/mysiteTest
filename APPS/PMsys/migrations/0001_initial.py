# Generated by Django 2.2.6 on 2020-03-16 03:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FacilityType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('title', models.CharField(max_length=32, verbose_name='采集器型号名称')),
                ('modal', models.SmallIntegerField(default=1, verbose_name='采集器类型')),
                ('chanelnum', models.SmallIntegerField(verbose_name='通道数')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='详情')),
            ],
            options={
                'verbose_name': '采集器类型',
                'verbose_name_plural': '采集器类型',
            },
        ),
        migrations.CreateModel(
            name='ItemFacilitys',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('f_title', models.CharField(max_length=64, verbose_name='采集器编号')),
                ('ip', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP地址')),
                ('soft_version', models.CharField(blank=True, max_length=64, null=True, verbose_name='嵌入式版本')),
                ('hardware_version', models.CharField(blank=True, max_length=64, null=True, verbose_name='硬件版本')),
                ('facilitys', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PMsys.FacilityType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ItemPower',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('p_title', models.CharField(max_length=64, verbose_name='主机名称')),
                ('status', models.BooleanField(verbose_name='风机状态')),
                ('nameplate', models.CharField(blank=True, max_length=64, null=True, verbose_name='铭牌')),
                ('facilitys', models.ManyToManyField(through='PMsys.ItemFacilitys', to='PMsys.FacilityType')),
            ],
            options={
                'verbose_name': '项目风机信息表',
            },
        ),
        migrations.CreateModel(
            name='Items',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('item_type', models.SmallIntegerField(choices=[(1, '风电'), (2, '火电')], default=1, verbose_name='项目类型')),
                ('name', models.CharField(max_length=64, unique=True, verbose_name='项目名称')),
                ('x', models.FloatField(blank=True, null=True, verbose_name='坐标x')),
                ('y', models.FloatField(blank=True, null=True, verbose_name='坐标y')),
                ('status', models.SmallIntegerField(choices=[(1, '未开工'), (2, '安装中'), (3, '维护中'), (4, '质保内'), (5, '过保'), (6, '待维护')], default=0, verbose_name='项目状态')),
                ('address', models.CharField(blank=True, max_length=64, null=True, verbose_name='地址')),
                ('telephone', models.CharField(blank=True, max_length=16, null=True, verbose_name='值班电话')),
                ('image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='默认图片')),
                ('entrancetime', models.DateTimeField(blank=True, null=True, verbose_name='入场时间')),
                ('endtime', models.DateTimeField(blank=True, null=True, verbose_name='完成时间')),
                ('accpettime', models.DateTimeField(blank=True, null=True, verbose_name='验收时间')),
                ('facilitycount', models.IntegerField(blank=True, null=True, verbose_name='采集器数量')),
                ('sensorcount', models.IntegerField(blank=True, null=True, verbose_name='传感器数量')),
            ],
            options={
                'verbose_name': '项目信息',
                'verbose_name_plural': '项目信息',
            },
        ),
        migrations.CreateModel(
            name='ItemServer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('server_type', models.SmallIntegerField(choices=[(1, '浏览站'), (2, '塔式服务器'), (3, '柜式服务器')], default=1, verbose_name='服务器类型')),
                ('server_model', models.CharField(blank=True, max_length=64, null=True, verbose_name='服务器型号')),
                ('sn', models.CharField(blank=True, max_length=128, null=True, verbose_name='服务器SN号')),
                ('os_release', models.CharField(blank=True, max_length=64, null=True, verbose_name='操作系统版本')),
                ('soft_release', models.CharField(blank=True, max_length=64, null=True, verbose_name='软件版本')),
                ('cpu', models.CharField(blank=True, max_length=64, null=True, verbose_name='cpu信息')),
                ('cpu_count', models.SmallIntegerField(blank=True, default=1, null=True, verbose_name='cpu个数')),
                ('ram', models.IntegerField(blank=True, null=True, verbose_name='内存大小')),
                ('disk_type', models.SmallIntegerField(blank=True, choices=[(1, 'SAS'), (2, 'SATA')], default=1, null=True, verbose_name='硬盘类型')),
                ('disk_size', models.IntegerField(blank=True, null=True, verbose_name='硬盘大小')),
                ('disk_count', models.SmallIntegerField(blank=True, default=1, null=True, verbose_name='硬盘个数')),
                ('raid_type', models.SmallIntegerField(blank=True, choices=[(0, 'RAID0'), (1, 'RAID1'), (5, 'RAID5')], default=0, null=True, verbose_name='阵列')),
                ('nic1', models.GenericIPAddressField(blank=True, null=True, verbose_name='网卡1')),
                ('nic2', models.GenericIPAddressField(blank=True, null=True, verbose_name='网卡2')),
                ('nic3', models.GenericIPAddressField(blank=True, null=True, verbose_name='网卡3')),
                ('nic4', models.GenericIPAddressField(blank=True, null=True, verbose_name='网卡4')),
                ('place', models.CharField(blank=True, max_length=128, null=True, verbose_name='放置位置')),
                ('pc_username', models.CharField(blank=True, max_length=32, null=True, verbose_name='电脑帐号')),
                ('pc_passwd', models.CharField(blank=True, max_length=32, null=True, verbose_name='电脑密码')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PMsys.Items')),
            ],
            options={
                'verbose_name': '服务器信息',
                'verbose_name_plural': '服务器信息',
            },
        ),
        migrations.CreateModel(
            name='ManagerFirm',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('name', models.CharField(max_length=64, verbose_name='管理公司名称')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '项目管理公司',
                'verbose_name_plural': '项目管理公司',
            },
        ),
        migrations.CreateModel(
            name='Manufacturer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('title', models.CharField(max_length=64, unique=True, verbose_name='主机厂名称')),
                ('model', models.SmallIntegerField(blank=True, choices=[(1, '风电'), (2, '火电')], default=1, null=True, verbose_name='行业类型')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='备注')),
            ],
            options={
                'verbose_name': '厂商',
                'verbose_name_plural': '厂商',
            },
        ),
        migrations.CreateModel(
            name='SensorType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('title', models.CharField(max_length=32, unique=True, verbose_name='传感器名称')),
                ('manufacturer', models.CharField(blank=True, max_length=64, null=True, verbose_name='传感器厂商')),
                ('bias_voltage', models.CharField(blank=True, max_length=32, null=True, verbose_name='偏置电压')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='详情')),
            ],
            options={
                'verbose_name': '传感器类型',
                'verbose_name_plural': '传感器类型',
            },
        ),
        migrations.CreateModel(
            name='WorkLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('status', models.SmallIntegerField(default=0, verbose_name='状态')),
                ('logged', models.TextField(verbose_name='已执行')),
                ('plan', models.TextField(verbose_name='计划')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PMsys.Items')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='填写人')),
            ],
            options={
                'verbose_name': '工作日志',
                'verbose_name_plural': '工作日志',
            },
        ),
        migrations.CreateModel(
            name='WindPower',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('title', models.CharField(blank=True, max_length=64, null=True, verbose_name='风机型号')),
                ('height', models.FloatField(blank=True, null=True, verbose_name='塔筒高度')),
                ('blade_length', models.FloatField(blank=True, null=True, verbose_name='叶片长度')),
                ('tier', models.FloatField(blank=True, null=True, verbose_name='塔筒层高')),
                ('memo', models.TextField(blank=True, null=True, verbose_name='备注')),
                ('manufacturer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PMsys.Manufacturer', verbose_name='厂商信息')),
            ],
            options={
                'verbose_name': '风电主机',
                'verbose_name_plural': '风电主机',
            },
        ),
        migrations.CreateModel(
            name='ServerImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('image', models.ImageField(upload_to='server', verbose_name='图片')),
                ('server', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PMsys.ItemServer')),
            ],
            options={
                'verbose_name': '服务器图片',
                'verbose_name_plural': '服务器图片',
            },
        ),
        migrations.CreateModel(
            name='Personnel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('status', models.SmallIntegerField(verbose_name='人员状态')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PMsys.Items')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='人员名称')),
            ],
            options={
                'verbose_name': '人员情况',
                'verbose_name_plural': '人员情况',
            },
        ),
        migrations.CreateModel(
            name='ItemTrip',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('direction', models.SmallIntegerField(default=0, verbose_name='出行方向')),
                ('city', models.CharField(max_length=32, verbose_name='城市')),
                ('percept', models.TextField(verbose_name='方案')),
                ('items', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PMsys.Items')),
            ],
            options={
                'verbose_name': '出行表',
            },
        ),
        migrations.CreateModel(
            name='ItemStay',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('hoteltitle', models.CharField(max_length=32, verbose_name='酒店名称')),
                ('hosteladdress', models.CharField(max_length=64, verbose_name='酒店地址')),
                ('telephone', models.CharField(max_length=15, verbose_name='酒店电话')),
                ('items', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PMsys.Items')),
            ],
            options={
                'verbose_name': '住宿表',
                'verbose_name_plural': '住宿表',
            },
        ),
        migrations.CreateModel(
            name='ItemsImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('image', models.ImageField(upload_to='items', verbose_name='图片')),
                ('items', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PMsys.Items')),
            ],
            options={
                'verbose_name': '项目图片',
                'verbose_name_plural': '项目图片',
            },
        ),
        migrations.CreateModel(
            name='ItemsFiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('type', models.SmallIntegerField(choices=[(1, '入场手续'), (2, '验收单'), (3, '质量检验单'), (4, '其它')], verbose_name='文件类型')),
                ('path', models.FileField(upload_to='', verbose_name='文件位置')),
                ('items', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PMsys.Items')),
            ],
            options={
                'verbose_name': '项目文件',
                'verbose_name_plural': '项目文件',
            },
        ),
        migrations.CreateModel(
            name='ItemSensors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('title', models.CharField(max_length=128, unique=True, verbose_name='传感器编号')),
                ('install_site', models.CharField(blank=True, max_length=128, null=True, verbose_name='安装位置')),
                ('itemfacility', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PMsys.ItemFacilitys')),
                ('number', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chanelnum_sensor', to='PMsys.ItemFacilitys')),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PMsys.SensorType')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='items',
            name='managerfirm',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='PMsys.ManagerFirm', verbose_name='业主公司'),
        ),
        migrations.AddField(
            model_name='items',
            name='manufacturers',
            field=models.ManyToManyField(blank=True, to='PMsys.Manufacturer', verbose_name='主机厂信息'),
        ),
        migrations.AddField(
            model_name='items',
            name='powers',
            field=models.ManyToManyField(blank=True, through='PMsys.ItemPower', to='PMsys.WindPower'),
        ),
        migrations.AddField(
            model_name='itempower',
            name='items',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PMsys.Items'),
        ),
        migrations.AddField(
            model_name='itempower',
            name='windpower',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PMsys.WindPower'),
        ),
        migrations.CreateModel(
            name='ItemLinkman',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('name', models.CharField(max_length=32, verbose_name='姓名')),
                ('phone', models.CharField(blank=True, max_length=11, null=True, verbose_name='电话')),
                ('status', models.SmallIntegerField(choices=[(1, '在岗'), (2, '休假'), (3, '离职')], default=1, verbose_name='人员状态')),
                ('post', models.CharField(blank=True, max_length=50, null=True, verbose_name='职位')),
                ('wechat', models.CharField(blank=True, max_length=64, null=True, verbose_name='微信')),
                ('mail', models.EmailField(blank=True, max_length=254, null=True, verbose_name='邮箱')),
                ('is_managerfirm', models.BooleanField(default=False, verbose_name='是否为业主')),
                ('befirm', models.CharField(blank=True, max_length=64, null=True, verbose_name='所属单位')),
                ('items', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PMsys.Items')),
            ],
            options={
                'verbose_name': '项目联系人',
                'verbose_name_plural': '项目联系人',
            },
        ),
        migrations.CreateModel(
            name='ItemGoods',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PMsys.Items')),
                ('operator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='发货人')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='itemfacilitys',
            name='itempower',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PMsys.ItemPower'),
        ),
        migrations.AddField(
            model_name='itemfacilitys',
            name='sensors',
            field=models.ManyToManyField(through='PMsys.ItemSensors', to='PMsys.SensorType'),
        ),
        migrations.CreateModel(
            name='ItemExecutr',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('begintime', models.DateTimeField(verbose_name='开始时间')),
                ('endtime', models.DateTimeField(verbose_name='结束时间')),
                ('items', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PMsys.Items')),
                ('name', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='申请人')),
            ],
            options={
                'verbose_name': '施工人员表',
                'verbose_name_plural': '施工人员表',
            },
        ),
        migrations.CreateModel(
            name='ItemCar',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('name', models.CharField(max_length=32, verbose_name='联系人')),
                ('phone', models.CharField(max_length=11, verbose_name='联系电话')),
                ('invoice', models.BooleanField(default=False, verbose_name='是否提供发票')),
                ('firm', models.CharField(blank=True, max_length=64, null=True, verbose_name='公司名称')),
                ('cost', models.IntegerField(verbose_name='收费标准')),
                ('items', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PMsys.Items')),
            ],
            options={
                'verbose_name': '租车表',
                'verbose_name_plural': '租车表',
            },
        ),
        migrations.CreateModel(
            name='GoodsImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('update_time', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('is_delete', models.BooleanField(default=False, verbose_name='删除标记')),
                ('image', models.ImageField(upload_to='', verbose_name='发货图片')),
                ('goods', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='PMsys.ItemGoods')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
